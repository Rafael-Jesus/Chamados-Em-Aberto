[{"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/index.js":"1","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/App.js":"2","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/reportWebVitals.js":"3","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/Routes/routes.js":"4","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/pages/ChamadosAbertos.js":"5","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/pages/Home.js":"6","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/pages/ChamadosFechados.js":"7","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/components/Loading.js":"8","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/components/AccordionClient.js":"9"},{"size":535,"mtime":1656430696486,"results":"10","hashOfConfig":"11"},{"size":136,"mtime":1657745464673,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1657797486086,"results":"13","hashOfConfig":"11"},{"size":649,"mtime":1657813865295,"results":"14","hashOfConfig":"11"},{"size":6862,"mtime":1658160188734,"results":"15","hashOfConfig":"11"},{"size":1151,"mtime":1657987941162,"results":"16","hashOfConfig":"11"},{"size":6879,"mtime":1658169551560,"results":"17","hashOfConfig":"11"},{"size":250,"mtime":1657887857117,"results":"18","hashOfConfig":"11"},{"size":596,"mtime":1658153887776,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1v6nf0a",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/index.js",[],[],[],"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/App.js",[],[],"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/reportWebVitals.js",[],[],"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/Routes/routes.js",[],[],"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/pages/ChamadosAbertos.js",["51","52","53","54","55","56","57","58","59","60"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport Loading from \"../components/Loading\";\nimport SyncIcon from \"@mui/icons-material/Sync\";\nimport AccordionClient from \"../components/AccordionClient\";\nimport orange from \"@material-ui/core/colors/orange\";\n\nimport { useEffect, useLayoutEffect, useState } from \"react\";\n\nimport _ from \"lodash\";\nimport axios from \"axios\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"../App.css\";\nimport \"../css/cardHome.css\";\n\nimport Modal from \"react-bootstrap/Modal\";\n\nconst ChamadosAbertos = () => {\n  const [dados, setDados] = useState([]);\n  const [removeLoading, setRemoveLoading] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [today, setToday] = useState(-1);\n  const [chamadosToday, setChamadosToday] = useState([]);\n\n  const showModal = (dataHoje, chamadosHoje) => {\n    setModalShow(true);\n    setChamadosToday(chamadosHoje);\n    setToday(dataHoje);\n  };\n\n  const syncDados = () => {\n    \n    const fetchData = async () => {\n      try {\n        const data = await axios(\n          \"https://apichamados.globallive.com.br/chamados\"\n        );\n\n        const values = _.groupBy(data.data.registros, (value) => {\n          //mudando o formato da data\n          let data_americana = value.data_abertura.substring(0, 10);\n          let data_brasileira = data_americana.split(\"-\").reverse().join(\"/\");\n          return data_brasileira;\n        });\n\n        function generateColor() {\n          const letters = \"0123456789ABCDEF\";\n          let color = \"#\";\n\n          for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n          }\n\n          return color;\n        }\n\n        const valuesV = Object.entries(values);\n        valuesV.unshift([\n          \"Element\",\n          \"Chamados\",\n          { role: \"style\" },\n          {\n            sourceColumn: 0,\n            role: \"annotation\",\n            type: \"string\",\n            calc: \"stringify\",\n          },\n        ]);\n        const dataChamados = valuesV.map((v, k) =>\n          k != 0 ? [v[0], v[1].length, generateColor(), v[1].length, v[1]] : \"\"\n        );\n        setDados(dataChamados);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  };\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        sty\n      >\n        <Modal.Header closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            style={{ color: \"#f26533\" }}\n          >\n            Chamados abertos no dia {today}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body id=\"modalBody\">\n          \n            {chamadosToday.map((value, index) => (\n              <AccordionClient idChamado={index} dadosChamado={value} />\n            ))}\n          \n        </Modal.Body>\n        <Modal.Footer>\n          <a href=\"#\" id=\"closeModal\" onClick={props.onHide}>\n            Close\n          </a>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  useLayoutEffect(() => {\n    setTimeout(() => {\n      setRemoveLoading(true);\n    }, 6000);\n\n    const fetchData = async () => {\n      try {\n        const data = await axios(\n          \"https://apichamados.globallive.com.br/chamados\"\n        );\n\n        const values = _.groupBy(data.data.registros, (value) => {\n          //mudando o formato da data\n          let data_americana = value.data_abertura.substring(0, 10);\n          let data_brasileira = data_americana.split(\"-\").reverse().join(\"/\");\n          return data_brasileira;\n        });\n\n        function generateColor() {\n          const letters = \"0123456789ABCDEF\";\n          let color = \"#\";\n\n          for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n          }\n\n          return color;\n        }\n\n        const valuesV = Object.entries(values);\n        valuesV.unshift([\n          \"Element\",\n          \"Chamados\",\n          { role: \"style\" },\n          {\n            sourceColumn: 0,\n            role: \"annotation\",\n            type: \"string\",\n            calc: \"stringify\",\n          },\n        ]);\n        const dataChamados = valuesV.map((v, k) =>\n          k != 0 ? [v[0], v[1].length, generateColor(), v[1].length, v[1]] : \"\"\n        );\n        setDados(dataChamados);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container-card-title\">\n      {removeLoading == false ? (\n        <Loading />\n      ) : (\n        <div className=\"container-card-title\">\n          <Link id=\"buttonCA\" to=\"/\">\n            Voltar\n          </Link>\n          <div className=\"container-title-logo\">\n            <img style={{ width: \"50px\" }} src={logo} alt=\"Logo\" />\n            <h1 style={{ color: \"#f26533\", fontSize: \"40px\" }}>\n              Chamados em Aberto\n            </h1>\n          </div>\n          <a id=\"syncData\" onClick={() => syncDados()}>\n            <SyncIcon style={{color: \"orange\", fontSize: 50}}/>\n          </a>\n          <div className=\"container\">\n            {dados.map((value, index) =>\n              index != 0 ? (\n                index === 1 ? (\n                  <div className=\"card\">\n                    <div className=\"box\">\n                      <div className=\"content\">\n                        <h2 style={{ color: \"#f26533\" }}>{value[1]}</h2>\n                        <h3>{value[0]}</h3>\n                        <p></p>\n                        <a\n                          id=\"id_relatorios\"\n                          href=\"#\"\n                          onClick={() => showModal(value[0], value[4])}\n                        >\n                          Ver Relatórios\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"card\">\n                    <div className=\"box\">\n                      <div className=\"content\">\n                        <h2>{value[1]}</h2>\n                        <h3>{value[0]}</h3>\n                        <p></p>\n                        <a\n                          id=\"id_relatorios2\"\n                          href=\"#\"\n                          onClick={() => showModal(value[0], value[4])}\n                        >\n                          Ver Relatórios\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                )\n              ) : (\n                \"\"\n              )\n            )}\n          </div>\n        </div>\n      )}\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  );\n};\n\nexport default ChamadosAbertos;\n","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/pages/Home.js",["61","62"],[],"import { Link } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport \"../App.css\";\nimport \"../css/cardHome.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"container-card-title\">\n      <div className=\"container-title-logo\">\n        <img style={{ width: \"50px\" }} src={logo} alt=\"Logo\" />\n        <h1 style={{ color: \"#f26533\", fontSize: \"40px\" }}>\n          Relatórios Global Live\n        </h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"card\">\n          <div className=\"box\">\n            <div className=\"content\">\n              <h2></h2>\n              <h3>Chamados em Aberto</h3>\n              <p></p>\n              <Link id=\"buttonHome\" to=\"/chamadosabertos\">Acessar</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"box\">\n            <div className=\"content\">\n              <h2></h2>\n              <h3>Chamados Fechados</h3>\n              <p></p>\n              <Link id=\"buttonHome\" to=\"/chamadosfechados\">Acessar</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/pages/ChamadosFechados.js",["63","64","65","66","67","68","69","70","71","72"],[],"/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/components/Loading.js",["73"],[],"import loading from \"../images/loading.gif\";\n\nimport \"../css/Loading.css\";\n\nfunction Loading() {\n  return (\n    <div class=\"loader_container\">\n        <img class=\"loader\" src={loading} alt=\"Loading Image\"/>\n    </div>\n  );\n}\n\nexport default Loading;\n","/home/gl/Área de Trabalho/Projetos/4.ProjetoChamados/chamados/src/components/AccordionClient.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":73,"column":13,"nodeType":"81","messageId":"82","endLine":73,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":108,"column":11,"nodeType":"85","endLine":108,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":158,"column":13,"nodeType":"81","messageId":"82","endLine":158,"endColumn":15},{"ruleId":"79","severity":1,"message":"86","line":170,"column":22,"nodeType":"81","messageId":"82","endLine":170,"endColumn":24},{"ruleId":"83","severity":1,"message":"87","line":183,"column":11,"nodeType":"85","endLine":183,"endColumn":56},{"ruleId":"79","severity":1,"message":"80","line":188,"column":21,"nodeType":"81","messageId":"82","endLine":188,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":196,"column":25,"nodeType":"85","endLine":200,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":213,"column":25,"nodeType":"85","endLine":217,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":19,"column":15,"nodeType":"85","endLine":19,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":29,"column":15,"nodeType":"85","endLine":29,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":73,"column":13,"nodeType":"81","messageId":"82","endLine":73,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":108,"column":11,"nodeType":"85","endLine":108,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":158,"column":13,"nodeType":"81","messageId":"82","endLine":158,"endColumn":15},{"ruleId":"79","severity":1,"message":"86","line":170,"column":22,"nodeType":"81","messageId":"82","endLine":170,"endColumn":24},{"ruleId":"83","severity":1,"message":"87","line":183,"column":11,"nodeType":"85","endLine":183,"endColumn":56},{"ruleId":"79","severity":1,"message":"80","line":188,"column":21,"nodeType":"81","messageId":"82","endLine":188,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":196,"column":25,"nodeType":"85","endLine":200,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":213,"column":25,"nodeType":"85","endLine":217,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":8,"column":9,"nodeType":"85","endLine":8,"endColumn":64},"no-unused-vars","'orange' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '===' and instead saw '=='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]